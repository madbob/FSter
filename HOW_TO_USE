AVFS 0.1
Instruction Manual

1) COMPILE

To compile this you need:
	Guglielmo-Glib >= 0.1
	FUSE >= 2.7.3

Execute ./compile.sh and hope to not have to resolve too many dependencies by
hand.

2) EXECUTE

First of all, mount the module "fuse" if it is not already in place.

Second: execute the "guglielmo" executable you generated from other source
available in this folder. Due AVFS denies you to create new Containers, it is
suggested to populate the storage with some kind of script, or your experience
will be very boring...

Optionally, create a dedicated folder in which mount AVFS. In this document
it is assumed this folder is /mnt/tmp, which must have all read and write
privileges.
# chmod a+rwx /mnt/tmp

Whenever you execute the program, as root or as normal user, you have to tune
something in your system: using as root you need to modify access policy for
DBus (not suggested), while using as user you have to change read/write
privileges for /dev/fuse (the virtual device created when FUSE module is
plugged) and `su` executable.
# chmod a+rw /dev/fuse
# chmod a+x /bin/su

Now, of course:
# ./fuse /mnt/tmp/ -odev -oexec -oallow_other -odefault_permissions
Before this, you may have to change the configuration of the FUSE
installation via the /etc/fuse.conf: edit it as root and add "user

Please note that on the newly mounted filesystem must be binded (with `mount
--bind`) /proc, /tmp and /dev: the first is due limitation of /proc (which is
itself a virtual filesystem managed by the kernel, with zeleautos policy of
access), while second and third are to hack some yet existing limit in AVFS.
# mount --bind /proc /mnt/tmp/proc
# mount --bind /dev /mnt/tmp/dev
# mount --bind /tmp /mnt/tmp/tmp
Those have to be executed each time AVFS is mounted.

3) USE

When the filesystem is mounted, just `cd /mnt/tmp`, `ls` it, and... see
nothing.
Then execute
# chroot /mnt/tmp su $your_preferred_user
and you obtain a terminal opened in the virtual filesystem: navigate in your
home folder (`cd`), `ls` there, and you will see Containers in form of
folders. In that folders (but not in $HOME!) you can create new files
(`touch foo`) and edit them.
If you execute some kind of application from the chroot'd terminal, these will
be also chroot'd. For graphical applications, X.org must be informed to
accept connections from an uncommon shells with the command
# xhost +
executed as normal user.

4) TROUBLESHOOTING

Due perfection is not part of this world, something may always go wrong...
If AVFS crashes, before you can mount it again you have to free the mountpoint
executing
# fusermount -uz /mnt/tmp
