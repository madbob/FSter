Itsme FSter Installation file
Copyright (C) 2010 Itsme S.r.l.

This file hold the installation instruction for FSter (Guglielmo hyper file
system) developed by Itsme S.r.l.
For details about configuration and running, please take a look at the wiki:
http://gitorious.org/itsme/pages/Fster


DEPENDENCIES
-------------------------------------------------------------------------------
In order to compile and install FSter you need:
  - cmake >= 2.8.0
  - fuse >= 2.8.1
  - tracker-client >= 0.7.11
  - libxml2 >= 2.7.4


BASIC INSTALLATION
-------------------------------------------------------------------------------
The simplest way to install FSter is:

1) $ mkdir build

Create a directory where you want to compile your software. In this case the
newly created build directory is within the unpacked downloaded software.

2) $ cd build

3) $ cmake ..

From within the build directory call cmake pointing to the root of the
unpacked software.  While running cmake will check your prerequisites and
create the makefiles.

4) $ make

Invoke the make program to build your software.

5) $ sudo make install

This command will install executables and libraries on your system. By default
the install will place executables and libraries under /usr/local.


DETAILS INSTALLATION
-------------------------------------------------------------------------------

1) Be aware of the fact the installation sets some capability to the FSter
executable, to be able to access the real filesystem with correct permissions
when a <system_folders> or <mirror_content> tag is specified.
Most important, cap_setuid and cap_setgid are full assignated, which means
the process would be able to change his privileges at runtime to any user
(including root!!!).
See capabilities(7), setcap(8) and getcap(8) for more informations.

2) The build directory might have any name and be placed in any convenient
location. In this case from the build directory you need to run cmake like
 cmake <path/to/root/source/tree>

3) Installation in user-specified directory.
To install FSter in a custom location you may want to use
-DCMAKE_INSTALL_PREFIX="/my/target/installation" as an argument for cmake

4) Custom Tracker installation

Cmake will check for Tracker installation in both /usr and /usr/local.
If your system has libraries in a different custom path you need to make
sure of the following steps:

4.a) pass -DTRACKER_PREFIX=/the/path/used/as/prefix as an argument on
     cmake invocation

4.b) Adjust your PKG_CONFIG_PATH environment variable to include the
     folder where tracker-client-0.7.pc is located. Run the command
     `locate` to figure out where they are.

4.c) adjust your LD_LIBRARY_PATH setting to your tracker installation to
     make sure FSter will properly load them.


-*- END OF INSTALL -*-
